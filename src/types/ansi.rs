#[derive(Clone, Debug)]
pub enum AnsiColor {
    Reset,
    Bold,
    Black,
    Red,
    Green,
    Yellow,
    Blue,
    Purple,
    Cyan,
    White,
    BrightBlack,
    BrightRed,
    BrightGreen,
    BrightYellow,
    BrightBlue,
    BrightPurple,
    BrightCyan,
    BrightWhite,
    BlackBackground,
    RedBackground,
    GreenBackground,
    YellowBackground,
    BlueBackground,
    PurpleBackground,
    CyanBackground,
    WhiteBackground,
    BrightBlackBackground,
    BrightRedBackground,
    BrightGreenBackground,
    BrightYellowBackground,
    BrightBlueBackground,
    BrightPurpleBackground,
    BrightCyanBackground,
    BrightWhiteBackground,
    Gray,
    GrayBackground,
    Orange,
    OrangeBackground,
    Pink,
    PinkBackground,
    CutePink,
    CutePinkBackground,
    Aqua,
    AquaBackground,
    Gold,
    GoldBackground,
    LightGreen,
    LightGreenBackground,
    LightBlue,
    LightBlueBackground,
    Magenta,
    MagentaBackground,
    LightCyan,
    LightCyanBackground,
    LightGray,
    LightGrayBackground,
    DarkRed,
    DarkRedBackground,
    DarkGreen,
    DarkGreenBackground,
    DarkBlue,
    DarkBlueBackground,
    DarkYellow,
    DarkYellowBackground,
    DarkPurple,
    DarkPurpleBackground,
}

impl AnsiColor {
    pub fn code(&self) -> &str {
        match self {
            AnsiColor::Reset => "\u{001B}[0m",
            AnsiColor::Bold => "\u{001B}[1m",
            AnsiColor::Black => "\u{001B}[30m",
            AnsiColor::Red => "\u{001B}[31m",
            AnsiColor::Green => "\u{001B}[32m",
            AnsiColor::Yellow => "\u{001B}[33m",
            AnsiColor::Blue => "\u{001B}[34m",
            AnsiColor::Purple => "\u{001B}[35m",
            AnsiColor::Cyan => "\u{001B}[36m",
            AnsiColor::White => "\u{001B}[37m",
            AnsiColor::BrightBlack => "\u{001B}[90m",
            AnsiColor::BrightRed => "\u{001B}[91m",
            AnsiColor::BrightGreen => "\u{001B}[92m",
            AnsiColor::BrightYellow => "\u{001B}[93m",
            AnsiColor::BrightBlue => "\u{001B}[94m",
            AnsiColor::BrightPurple => "\u{001B}[95m",
            AnsiColor::BrightCyan => "\u{001B}[96m",
            AnsiColor::BrightWhite => "\u{001B}[97m",
            AnsiColor::BlackBackground => "\u{001B}[40m",
            AnsiColor::RedBackground => "\u{001B}[41m",
            AnsiColor::GreenBackground => "\u{001B}[42m",
            AnsiColor::YellowBackground => "\u{001B}[43m",
            AnsiColor::BlueBackground => "\u{001B}[44m",
            AnsiColor::PurpleBackground => "\u{001B}[45m",
            AnsiColor::CyanBackground => "\u{001B}[46m",
            AnsiColor::WhiteBackground => "\u{001B}[47m",
            AnsiColor::BrightBlackBackground => "\u{001B}[100m",
            AnsiColor::BrightRedBackground => "\u{001B}[101m",
            AnsiColor::BrightGreenBackground => "\u{001B}[102m",
            AnsiColor::BrightYellowBackground => "\u{001B}[103m",
            AnsiColor::BrightBlueBackground => "\u{001B}[104m",
            AnsiColor::BrightPurpleBackground => "\u{001B}[105m",
            AnsiColor::BrightCyanBackground => "\u{001B}[106m",
            AnsiColor::BrightWhiteBackground => "\u{001B}[107m",
            AnsiColor::Gray => "\u{001B}[38;5;244m",
            AnsiColor::GrayBackground => "\u{001B}[48;5;244m",
            AnsiColor::Orange => "\u{001B}[38;5;202m",
            AnsiColor::OrangeBackground => "\u{001B}[48;5;202m",
            AnsiColor::Pink => "\u{001B}[38;5;200m",
            AnsiColor::PinkBackground => "\u{001B}[48;5;200m",
            AnsiColor::CutePink => "\u{001B}[38;5;205m",
            AnsiColor::CutePinkBackground => "\u{001B}[48;5;205m",
            AnsiColor::Aqua => "\u{001B}[38;5;45m",
            AnsiColor::AquaBackground => "\u{001B}[48;5;45m",
            AnsiColor::Gold => "\u{001B}[38;5;220m",
            AnsiColor::GoldBackground => "\u{001B}[48;5;220m",
            AnsiColor::LightGreen => "\u{001B}[38;5;82m",
            AnsiColor::LightGreenBackground => "\u{001B}[48;5;82m",
            AnsiColor::LightBlue => "\u{001B}[38;5;39m",
            AnsiColor::LightBlueBackground => "\u{001B}[48;5;39m",
            AnsiColor::Magenta => "\u{001B}[38;5;13m",
            AnsiColor::MagentaBackground => "\u{001B}[48;5;13m",
            AnsiColor::LightCyan => "\u{001B}[38;5;51m",
            AnsiColor::LightCyanBackground => "\u{001B}[48;5;51m",
            AnsiColor::LightGray => "\u{001B}[38;5;247m",
            AnsiColor::LightGrayBackground => "\u{001B}[48;5;247m",
            AnsiColor::DarkRed => "\u{001B}[38;5;88m",
            AnsiColor::DarkRedBackground => "\u{001B}[48;5;88m",
            AnsiColor::DarkGreen => "\u{001B}[38;5;22m",
            AnsiColor::DarkGreenBackground => "\u{001B}[48;5;22m",
            AnsiColor::DarkBlue => "\u{001B}[38;5;19m",
            AnsiColor::DarkBlueBackground => "\u{001B}[48;5;19m",
            AnsiColor::DarkYellow => "\u{001B}[38;5;136m",
            AnsiColor::DarkYellowBackground => "\u{001B}[48;5;136m",
            AnsiColor::DarkPurple => "\u{001B}[38;5;55m",
            AnsiColor::DarkPurpleBackground => "\u{001B}[48;5;55m",
        }
    }
}

#[derive(Clone, Debug)]
pub struct AnsiPair {
    pub background: AnsiColor,
    pub foreground: AnsiColor,
}

impl AnsiPair {
    pub fn new(background: AnsiColor, foreground: AnsiColor) -> Self {
        AnsiPair {
            background,
            foreground,
        }
    }
}
